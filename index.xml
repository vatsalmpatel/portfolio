<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vatsal&#39;s Terminal</title>
    <link>https://vatsalmpatel.github.io/portfolio/</link>
    <description>Recent content on Vatsal&#39;s Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>¬© Vatsal Patel</copyright>
    <lastBuildDate>Sun, 16 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://vatsalmpatel.github.io/portfolio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>https://vatsalmpatel.github.io/portfolio/about/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://vatsalmpatel.github.io/portfolio/about/</guid>
      <description>Hi there I am Vatsal Patel, currently pursuing my Masters of Science in Artificial Intelligence from Northeastern University.
From June 2022, I am doing a co-op at Retail Business Services (a company of Ahold Delhaize USA) as a Machine Learning Operations (MLOps) Engineer. At Retail Business Services, I am responsible for building Recommender Systems using Machine Learning and Deep Learning to be able to recommend products to millions of customers who shop at brands such as Stop &amp;amp; Shop, Giant Food, Food Lion and many other brands owned by Ahold Delhaize on the east coast.</description>
      <content>&lt;h1 id=&#34;hi-there&#34;&gt;Hi there&lt;/h1&gt;
&lt;p&gt;I am Vatsal Patel, currently pursuing my Masters of Science in Artificial Intelligence from Northeastern University.&lt;/p&gt;
&lt;p&gt;From June 2022, I am doing a co-op at Retail Business Services (a company of Ahold Delhaize USA) as a Machine Learning Operations (MLOps) Engineer. At Retail Business Services, I am responsible for building Recommender Systems using Machine Learning and Deep Learning to be able to recommend products to millions of customers who shop at brands such as Stop &amp;amp; Shop, Giant Food, Food Lion and many other brands owned by Ahold Delhaize on the east coast.&lt;/p&gt;
&lt;p&gt;As a Machine Learning and MLOps Engineer, I like to work on projects that include Deep Learning, Computer Vision, NLP, Recommendation Engines, Data Engineering. I have experience in building end-to-end machine learning systems using a host of ML Models, containerizing them using Docker and deploying it on a Kubernetes Cluster using platforms such as Azure and Seldon. I also have a soft spot for automation building automation pipelines using Azure DevOps pipelines. As for cloud stack, I have worked with both Microsoft Azure and Amazon AWS. I have a soft spot for Databricks, and how it has simplified life for programmers.&lt;/p&gt;
&lt;p&gt;In 2021, I published a research paper named &lt;strong&gt;&lt;a href=&#34;https://www.researchgate.net/publication/353546682_Linear_Decision_Tree_Regressor_Decision_Tree_Regressor_Combined_with_Linear_Regressor&#34;&gt;Linear Decison Tree Regressor&lt;/a&gt;&lt;/strong&gt; where we developed a new machine learning algorithm for regression outperforming other regressors and overcame limitations of standard decision trees.&lt;/p&gt;
&lt;p&gt;With my passion for ML algorithms, Computer Vision, Deep Learning and NLP I would love to be a part of the team that makes real advancements in AI and applies it practically that could affect the lives of millions around the world.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I have a burning desire to keep on learning new stuff and I have no desire to stop, not right now, NEVER.&lt;/strong&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;P.S. I love to swim and play tennis and I am also a state level Table Tennis Champion üòâ back in India.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Hi, it&#39;s Vatsal here üëã</title>
      <link>https://vatsalmpatel.github.io/portfolio/posts/greet/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://vatsalmpatel.github.io/portfolio/posts/greet/</guid>
      <description>As you have come to my website, this is a chance for you read more about me as well as take a look at various Machine Learning and Deep Learning Projects that I have worked by navigating the links above and feel free to contact me and we can have a chat üó£.
A short intro I am currently a full-time student at Northeastern University, pursuing my Masters in Artificial Intelligence, inclined towards Machine Learning and Computer Vision.</description>
      <content>&lt;p&gt;As you have come to my website, this is a chance for you read more about me as well as take a look at various Machine Learning and Deep Learning Projects that I have worked by navigating the links above and feel free to contact me and we can have a chat üó£.&lt;/p&gt;
&lt;h3 id=&#34;a-short-intro&#34;&gt;A short intro&lt;/h3&gt;
&lt;p&gt;I am currently a full-time student at Northeastern University, pursuing my Masters in Artificial Intelligence, inclined towards Machine Learning and Computer Vision. I love to work on deep image models, constantly trying out new models followed by their training and testing on images to gain useful insights on the data and work on it to make it better. I recently started to learn more about self-driving cars and the technology behind them and the state-of-the-art models used to govern self-driving cars. I also love learning about Machine Learning algorithms and gathering insights on how they were used to solve problems that changed the landscape of AI. Recent applications of AI in self-driving technology and seeing the ability of those models to predict/output useful constructs from the features they learn excites me and it is what motivates me to keep exploring more and learn about AI.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Important Links and Contact Information</title>
      <link>https://vatsalmpatel.github.io/portfolio/contact/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://vatsalmpatel.github.io/portfolio/contact/</guid>
      <description>GitHub LinkedIn E-Mail </description>
      <content>&lt;h3 id=&#34;githubhttpsgithubcomvatsalmpatel&#34;&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/&#34;&gt;GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/h3&gt;
&lt;h3 id=&#34;linkedinhttpswwwlinkedincominvatsal-patel-84220745&#34;&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://www.linkedin.com/in/vatsal-patel-84220745/&#34;&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/h3&gt;
&lt;h3 id=&#34;e-mailmailtopatelvatsal1northeasternedu&#34;&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;mailto:patel.vatsal1@northeastern.edu&#34;&gt;E-Mail&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/h3&gt;
</content>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://vatsalmpatel.github.io/portfolio/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vatsalmpatel.github.io/portfolio/projects/</guid>
      <description>Automatic Number Plate Detection üöó In this project I created an object detection model to detect number plate on vehicles. This project uses pre-trained ssd mode from the TensorFlow Model Zoo, and then I train my own model from the annotated training images. This model will output images with bounding box around number plates on vehicle images.
Automatic Number Plate Detection on GitHub
Road Segmentation using FCN üèé In this small project, I created a road segmentation model using FCN for self-driving cars.</description>
      <content>&lt;h2 id=&#34;automatic-number-plate-detection-&#34;&gt;Automatic Number Plate Detection üöó&lt;/h2&gt;
&lt;p&gt;In this project I created an object detection model to detect number plate on vehicles. This project uses pre-trained ssd mode from the TensorFlow Model Zoo, and then I train my own model from the annotated training images. This model will output images with bounding box around number plates on vehicle images.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Automatic-Number-Plate-Detection-with-TensorFlow-Object-Detection&#34;&gt;Automatic Number Plate Detection on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;road-segmentation-using-fcn-&#34;&gt;Road Segmentation using FCN üèé&lt;/h2&gt;
&lt;p&gt;In this small project, I created a road segmentation model using FCN for self-driving cars. This uses the VGG16 model as the backend, which is pretrained on the ImageNet dataset with the last pooling layers modified to implement road segmentation tp create a more granular FCN8 architecture. The model was built using TensorFlow with GPU acceleration on Kaggle Notebooks. The model contains around 14 Million parameters, trained for 200 epochs.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Road-Segmentation-using-Fully-Convolutional-Networks&#34;&gt;Code and Samples are on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;object-tracking-with-deepsort-&#34;&gt;Object Tracking with DeepSORT üöó&lt;/h2&gt;
&lt;p&gt;In this notebook, I combined the YOLOv3 algorithm with the DeepSORT algorithm to create an object tracking module to track cars going on the road. This project uses YOLO to identify objects in each frame of the video and then uses the DeepSORT to keep track of each object in the video by giving it an object ID and then keeping track of the same object through the video using those object ID and temporal references.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Object-Tracking-with-DeepSORT&#34;&gt;Object tracking code and sample video&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;comment-toxicity--detection&#34;&gt;Comment Toxicity üß™ Detection&lt;/h2&gt;
&lt;p&gt;In todays day and age, there is a lot of toxicity on a lot (most) of social media platforms, and we need a way to flag those comments, blogs, text, news, e.t.c.. In order to do that, we can ask for a helping hand from a Machine Learning Model, that can classify comments, if they are toxic or not, and if they are what is the severity of the toxicity, i.e. threat, vulgar üó£ and much more. We need a way to filter out negative comments and make a safe environment for everybody to enjoy.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Comment-Toxicity-Detection-using-Deep-Learning&#34;&gt;Comment Toxicity Detection on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;cancer-cell-detection-and-segmentation-with-tensorflow-and-fastapi&#34;&gt;Cancer Cell Detection and Segmentation with TensorFlow and FastAPI&lt;/h2&gt;
&lt;p&gt;In this project, I created a FastAPI application that takes a pretrained model to detect and segment cancer cells from an image and make predictions with the help of the model.&lt;/p&gt;
&lt;p&gt;I have used FastAPI to create an endpoint (which is localhost in our case) which can be queried with Postman or in the Jupyter Notebook to visualize the predictions made by the model.&lt;/p&gt;
&lt;p&gt;You need to choose an image and pass it to the model to make predictions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Cancer-Cell-Image-Segmentation-using-TensorFlow-and-FastAPI&#34;&gt;FastAPI and Model Deployment code&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;iris--detector-with-tensorflow-and-opencv&#34;&gt;Iris üëÅ Detector with TensorFlow and OpenCV&lt;/h2&gt;
&lt;p&gt;In this project I created a TensorFlow model which can track eyes and project dots on my eyes üëÄ as I move my to and away from the screen.&lt;/p&gt;
&lt;p&gt;The model uses a pretrained ResNet model and I add more layers on top to train the model to track my eyes. I use images annotated with the point locations of my eye on a image. The annotation of images is done using LabelMe library in python and then the data is augmented using albumentations library.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Iris-Detection-with-TensorFlow&#34;&gt;Iris Detector on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;signature-detection-on-company-documents-&#34;&gt;Signature Detection on Company Documents üìÑ&lt;/h2&gt;
&lt;p&gt;Now a days it is very common for law firms to have a digital record for every piece of paper they receive and it is essential for them to have signatures on each piece of paper they receive to keep track of who received what document because it could be something confidential related to a case that the firm might be working on.&lt;/p&gt;
&lt;p&gt;So, instead of a human looking through each digital document, why not let the computer do the hard work in looking through each document and detect signatures in those images.&lt;/p&gt;
&lt;p&gt;Created an entire end-to-end system by deploying the project on Azure and automating deployment on change with GitHub Actions.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/rbs-ml-e2e-challenge&#34;&gt;GitHub: Signature Detection&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;face-detection-with-tensorflow-&#34;&gt;Face Detection with TensorFlow üëΩ&lt;/h2&gt;
&lt;p&gt;In this project, I worked upon creating a face detection appplication using TensorFlow. This application captures training images using your own webcam, saves them to a folder. Then you annotate those images using labelme library and use image augmentation using albumentations to augment those images and create more images for training. After this, I created a model using the Keras Functional API to create a model using VGG16 model architecture. Finally, I used this pre-trained model to detect my face in real-time.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Face-Detection-with-TensorFlow&#34;&gt;Face Detection Code on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;text-generation-using-transformers-&#34;&gt;Text Generation using Transformers üÜé&lt;/h2&gt;
&lt;p&gt;In this example are going to look at Text Generation using the GPT2 model and Hugging Face ü§ó. Using this model, we can generate paragraphs of text by just using a starting sentence.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Text-Generation-with-Transformers-and-GPT2&#34;&gt;Text Generation using Transformers on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sign-language-detection-&#34;&gt;Sign Language Detection ü§ò&lt;/h2&gt;
&lt;p&gt;This is a Sign Language Detection Project üìΩ. What it does is detect hand-signs in realtime using OpenCV and TensorFlow LSTM Model. The current model is trained on detect &amp;ldquo;I Love You ‚ô•&amp;rdquo;, &amp;ldquo;Hello üëã&amp;rdquo;, &amp;ldquo;Thank Youüéá&amp;rdquo;, &amp;ldquo;Volume Up üîä&amp;rdquo; and &amp;ldquo;Volume Down üîà&amp;rdquo; hand signs.&lt;/p&gt;
&lt;p&gt;Though, this can be modified to detect any handsigns and even body poses&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Sign-Language-Detection-With-Action-Recognition&#34;&gt;Checkout the code for this project on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;churn-prediction-using-machine-learning&#34;&gt;Churn Prediction using Machine Learning&lt;/h2&gt;
&lt;p&gt;Churn is a metric of customer satisfaction. Low churn rate means that the customers are happy; and a higer churn rate means that the customers are no longer satisfied with the product/ business model and are leaving the company. This means churn rate can be very important. A small üîΩ in the churn rate can mean potentially üîº profits for the company.Churn is a good indicator of growth potential and machine learning can simplify the task and help you calculate customer churn rate.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Customer-Churn-Prediction&#34;&gt;Code for Customer Churn Prediction&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;user-sentiment-analysis-using-transformers&#34;&gt;User Sentiment Analysis using Transformers&lt;/h2&gt;
&lt;p&gt;In this example, we are gonna look at the BERT Transformer model from Hugging Face that will be used fro Sentiment Analysis.&lt;/p&gt;
&lt;p&gt;The BERT Model is trained on product reviews from six languages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;English&lt;/li&gt;
&lt;li&gt;Dutch&lt;/li&gt;
&lt;li&gt;German&lt;/li&gt;
&lt;li&gt;French&lt;/li&gt;
&lt;li&gt;Spanish&lt;/li&gt;
&lt;li&gt;Italian&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We can leverage this trained model and use it very easily to get sentiments from reviews, I mean any reviews üçæ from any of those 6 languages üí¨.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Sentiment-Analysis-using-Transformers&#34;&gt;User Sentiment Analysis on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;neural-style-transfer-using-tensorflow-&#34;&gt;Neural Style Transfer using TensorFlow üé®&lt;/h2&gt;
&lt;p&gt;Neural Style Transfer is a technique that takes two images, namelt, the content image and the style image and blend them both together so the output looks like the content image, but painted in the style of the style reference image. This is implemented with a pre-trained model fromTensorFlow Hub, that was trained to perform this kind of task. We just need to load the model and use the model to perform style transfer.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/vatsalmpatel/Neural-Style-Transfer-with-TensorFlow&#34;&gt;Code for Neural Style Transfer on GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    </item>
    
    <item>
      <title>Research</title>
      <link>https://vatsalmpatel.github.io/portfolio/research/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://vatsalmpatel.github.io/portfolio/research/</guid>
      <description>Linear Desicion Tree Regressor As Decision Tree Regressor fails to deal with linear relationships, Linear Decision Tree Regressor is build to overcome this limitation by combining the linear regressor with the decision tree regressor. It can do so by using a decision tree structure and a modified node split method, which employs linear regression to better splits the nodes to improve the decision tree performance. The paper discusses the working of the proposed model, how it overcomes the limitations of decision tree regressor and linear regressor.</description>
      <content>&lt;h2 id=&#34;linear-desicion-tree-regressor&#34;&gt;Linear Desicion Tree Regressor&lt;/h2&gt;
&lt;p&gt;As Decision Tree Regressor fails to deal with linear 
relationships, Linear Decision Tree Regressor is build to
overcome this limitation by combining the linear regressor with 
the decision tree regressor. It can do so by using a decision tree 
structure and a modified node split method, which employs linear 
regression to better splits the nodes to improve the decision tree 
performance. The paper discusses the working of the proposed 
model, how it overcomes the limitations of decision tree regressor 
and linear regressor. Finally, the model is applied to various 
datasets, and the performance is compared to that of other
regression models.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://scholar.google.com/citations?view_op=view_citation&amp;amp;hl=en&amp;amp;user=7gSQN-8AAAAJ&amp;amp;citation_for_view=7gSQN-8AAAAJ:u5HHmVD_uO8C&#34;&gt;Google Scholar Link&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
</content>
    </item>
    
  </channel>
</rss>
